### NOTES A MOI-MEME ###

Idée du module :

Ajouter une page de témoignages, permettant aux utilisateurs de mettre un commentaire.
Les commentaires seront stockés sur la base de donnée.
(pas d'administration des commentaires, jsais pas comment c'est censé marcher,
un admin est pas censé pouvoir supprimer un commentaire négatif, question d'éthique)

### STEP 1 : Structures & info.yml ###

Création de la structure de dossiers.
Création du .module et du .info.yml

  ### STEP 2 : Dependencies ###

Identification des dependencies (si j'ai bien compris) :
  - drupal:core // access to core functionnalities of drupal comme FormBase ou ControllerBase
  - drupal:block // needed to create block and display mes témoignanes
  - drupal:views // peut être utile pour filtrer etc les témoignages
  - drupal:entity // pour stocker mes testimonials sous forme d'entities
  - drupal:user // pour donner l'accès uniquement aux utilisateurs vérifiés

  EDIT : j'arrive pas à installer le module, ya un truc que j'ai pas du comprendre j'enlève les dépendances
          et je reviendrai dessus ...

  ### STEP 3 : Testimonial submission Form ###

  note :  J'utiliserai .routing.yml et non hook_menu()
          car d'après mes recherches c'est préférable pour les version de drupal 8+.

fonctionnement : authentificated users can post a testimonial. it will be saved on the database, including the date,
name and mail.

rappel : Ma Form class doit contenir :
 - getFormId() // retourne l'id du form, utilisé dans le system de gestion de form drupal
 - buildForm(array $form, FormStateInterface $form_state) // défini les éléments du form, boutons, fields etc
 - validateForm(array &$form, FormStateInterface $form_state) // FACULTATIF, contient la logique de validation
 - submitForm(array &$form, FormStateInterface $form_state) // contient la logique de  traitement des data post validation

### STEP 4 : routing ###

Apparement depuis Drupal 8 on préfère utiliser un fichier monmodule.routing.yml
On peut néanmoins retrouver le hook_menu() utilisé dans les v7 et inférieur.

Création du fichier testimonial.routing.yml...

### STEP 5 : Implémentation des logiques validateForm et submitForm ###

Validation simple, juste si non empty.

Pour le submit : try catch,
on récupère :
- uid, pour identifier le témoin de façon unique (c'est pas versatile, un user peut p-e changer de username etc...
- displayname, pour afficher qui a posté le témoignage.
- nid, l'id de la node, si imaginons on veut afficher des témoignages pour un article en particulier...
- testimonial, le témoignage......
- current_time, pour savoir de quand date un témoignage, pouvoir classer par avis récent par exemple.

### STEP 6 : Création du block ###

Block créé, mais il n'apparait pas dans le Block Layout, j'dois avoir un soucis qq part. (soucis réglé au prochain step)

### STEP 7 : Ajout d'un fichier testimonial.install ###

Le but est de créer et supprimer ma table testimonial dans ma db.

Rappel : cmd : sqlite3 .sqlite   <- se trouve sous sites/default/files.

.table testimonial          voir si la table existe
.schema testimonial         affiche le schema
SELECT * FROM testimonial;   affiche le contenu

note : Vu que j'arrive pas à mettre mon module en Block, nid est null donc j'ai pour le moment mis que
        nid 'not null' => FALSE dans mon schema.
       edit : j'ai réussi à mettre le block en le placant dans testimonial/src/Plugin/Block plutot que
       testimonial/src/Block

       ENREGISTREMENT DU NID : done

### STEP 8 : Ajout d'un block d'affichage des témoignages. ###

Je vais créer un nouveau block TestimonialDisplayBlock.php

Le but serait d'afficher un certain nombre des derniers témoignages, et de pouvoir étendre ce nombre avec une flèche.
Le nombre de témoignages affichés par défaut sera de 3 mais il sera modifiable lors de l'ajout du block plus tard.

Ajout du module Devel, qui permet d'utiliser la commande kint() pour afficher quelque chose

### STEP 9 : Amélioration du block d'affichage. ###

Déjà n'afficher que les témoignages qui correspondent au noeud :

Ne pas garder en cache sinon, si je vais en premier sur le noeud 1, puis sur le noeud 2, j'aurai uniquement
les témoignages du noeud 1 d'affiché etc... :

return [
      '#theme' => 'block_testimonial',
      '#testimonials' => $testimonials,
      '#cache' => [
        'max-age' => 0,
        'contexts' => ['url.path'],
      ],
    ];







